@model DashboardData

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .dashboard-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .dashboard-icon {
        font-size: 40px;
        margin-bottom: 15px;
        color: #5b9bd5; /* Icônes bleues */
    }
    .card-title {
        font-weight: bold;
        font-size: 1.25rem;
    }
    .card-text {
        font-size: 2rem;
        font-weight: 600;
        color: #333;
    }
    .text-success {
        color: orange;
    }
    .text-warning {
        color: magenta;
    }
    .text-info {
        color: #17a2b8;
    }
</style>

<div class="container py-4">
    <header class="mb-4">
        <h1 class="text-center">Dashboard</h1>
    </header>

    <div class="row g-3">
        <!-- Card 1 -->
        <div class="col-md-4">
            <a href="@Url.Action("Customers", "Dashboard")" class="text-decoration-none"> 
                <div class="card dashboard-card">
                    <div class="card-body p-4" id="customers">
                        <div class="text-center">
                            <i class="fas fa-user dashboard-icon text-info"></i> <!-- Icône non remplie -->
                        </div>
                        <h4 class="card-title text-center">Customers</h4>
                        <h2 class="card-text text-center mb-2">@Model.NbCustomers</h2> 
                        <p class="card-text text-center mb-2">Total budget: @Model.TotalBudgetFormat</p>
                    </div>
                </div>
            </a>
        </div>

        <!-- Card 2 -->
        <div class="col-md-4">
            <a href="@Url.Action("Leads", "Dashboard")" class="text-decoration-none"> 
                <div class="card dashboard-card">
                    <div class="card-body p-4" id="leads">
                        <div class="text-center">
                            <i class="fas fa-user-plus dashboard-icon text-warning"></i>
                        </div>
                        <h4 class="card-title text-center">Leads</h4>
                        <h2 class="card-text text-center mb-2">@Model.NbLeads</h2>
                    </div>
                </div>
            </a>
        </div>

        <!-- Card 3 -->
        <div class="col-md-4">
            <a href="@Url.Action("Tickets", "Dashboard")" class="text-decoration-none">
                <div class="card dashboard-card" id="tickets">
                    <div class="card-body p-4">
                        <div class="text-center">
                            <i class="fas fa-ticket-alt dashboard-icon text-success"></i> <!-- Icône non remplie -->
                        </div>
                        <h4 class="card-title text-center">Tickets</h4>
                        <h2 class="card-text text-center mb-2">@Model.NbTickets</h2> <!-- Nombre de tickets -->
                    </div>
                </div>
            </a>
        </div>
    </div>

    <!-- Graphique -->
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card dashboard-card">
                <div class="card-body">
                    <h4 class="card-title text-center">Customer Budgets</h4>
                    <canvas id="customerBudgetChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Récupérer les données du modèle
    var customerBudgets = @Html.Raw(Json.Serialize(Model.CustomerBudget));

    // Préparer les données pour Chart.js
    var labels = customerBudgets.map(function(customer) {
        return customer.customerName;
    });

    var data = customerBudgets.map(function(customer) {
        return customer.totalAmount;
    });

    // Créer le graphique
    var ctx = document.getElementById('customerBudgetChart').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar', // Type de graphique (bar, line, pie, etc.)
        data: {
            labels: labels,
            datasets: [{
                label: 'Total Amount',
                data: data,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>